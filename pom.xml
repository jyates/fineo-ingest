<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.fineo.etl</groupId>
  <artifactId>ingest-parent</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <modules>
    <module>batch</module>
    <module>pipeline</module>
    <module>drill-test</module>
    <module>spark-common</module>
  </modules>

  <properties>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>

    <!-- Plugins -->
    <maven.compiler.version>3.3</maven.compiler.version>
    <maven.dependency.version>2.10</maven.dependency.version>
    <surefire.version>2.19</surefire.version>
    <maven.failsafe.plugin.version>2.19.1</maven.failsafe.plugin.version>

    <!-- Dependencies -->
    <commons-cli.version>1.2</commons-cli.version>
    <hadoop.version>2.6.0</hadoop.version>
    <scala.base.version>2.10</scala.base.version>
    <scala.major.version>${scala.base.version}.5</scala.major.version>
    <scala.version-next>2.11</scala.version-next>
    <spark.version>1.6.1</spark.version>

    <!-- AWS -->
    <dynamo-local.version>1.10.5.1</dynamo-local.version>
    <aws-java-sdk.version>1.10.66</aws-java-sdk.version>
    <aws-lambda-java-core.version>1.1.0</aws-lambda-java-core.version>
    <amazon-kinesis-producer.version>0.10.2</amazon-kinesis-producer.version>
    <amazon-kinesis-client.version>1.6.1</amazon-kinesis-client.version>
    <aws-lambda-java-log4j.version>1.0.0</aws-lambda-java-log4j.version>

    <!-- Test dependencies -->
    <junit.version>4.12</junit.version>
    <mockito.version>1.10.19</mockito.version>

    <!-- Test configuration -->
    <test.output.to.file>true</test.output.to.file>
    <test.exclude.pattern></test.exclude.pattern>

    <!-- Testing Phases -->
    <surefire.awsLocalTests>io.fineo.aws.AwsDependentTests</surefire.awsLocalTests>
    <surefire.skip.simple>false</surefire.skip.simple>
    <surefire.skip.aws>false</surefire.skip.aws>
    <!-- Integration Tests -->
    <!-- AWS tests that we run  against real resources -->
    <failsafe.aws>io.fineo.aws.AwsDependentTests</failsafe.aws>
    <failsafe.validation>io.fineo.aws.ValidateDeployment</failsafe.validation>
    <failsafe.skip.local>false</failsafe.skip.local>
    <failsafe.skip.aws>true</failsafe.skip.aws>
    <failsafe.skip.validation>true</failsafe.skip.validation>
    <drill.version>1.6.0</drill.version>
    <logback.version>1.1.3</logback.version>
  </properties>

  <repositories>
    <!-- Official amazon dynamo local repository -->
    <repository>
      <id>dynamodb-local</id>
      <name>DynamoDB Local Release Repository</name>
      <url>http://dynamodb-local.s3-website-us-west-2.amazonaws.com/release</url>
    </repository>
  </repositories>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire.version}</version>
          <!-- Generic testing configuration for all packages -->
          <configuration>
            <redirectTestOutputToFile>${test.output.to.file}</redirectTestOutputToFile>
            <skip>true</skip>
            <argLine>-enableassertions -Djava.security.egd=file:/dev/./urandom
              -Dsqlite4java.library.path=${project.build.directory}/dependencies
              -Djava.net.preferIPv4Stack=true
            </argLine>
            <excludes>
              <!-- users can add -D option to skip particular test classes
             ex: mvn test -Dtest.exclude.pattern=**/TestFoo.java,**/TestBar.java
              -->
              <exclude>${test.exclude.pattern}</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <id>local-tests</id>
              <goals>
                <goal>test</goal>
              </goals>
              <configuration>
                <excludedGroups>${surefire.awsLocalTests}</excludedGroups>
                <skip>${surefire.skip.simple}</skip>
              </configuration>
            </execution>
            <execution>
              <id>awsLocalTests</id>
              <goals>
                <goal>test</goal>
              </goals>
              <configuration>
                <groups>${surefire.awsLocalTests}</groups>
                <skip>${surefire.skip.aws}</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven.failsafe.plugin.version}</version>
          <configuration>
            <includes>**/IT*.java</includes>
          </configuration>
          <executions>
            <execution>
              <id>local-integration-tests</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <configuration>
                <excludedGroups>${failsafe.aws},${failsafe.validation}</excludedGroups>
                <skip>${failsafe.skip.local}</skip>
              </configuration>
            </execution>
            <execution>
              <id>aws-integration-tests</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <configuration>
                <groups>${failsafe.aws}</groups>
                <skip>${failsafe.skip.aws}</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven.dependency.version}</version>
          <executions>
            <execution>
              <phase>process-test-resources</phase>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                <overWriteReleases>false</overWriteReleases>
                <overWriteSnapshots>false</overWriteSnapshots>
                <overWriteIfNewer>true</overWriteIfNewer>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!-- Create the test jar -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.6</version>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencyManagement>
    <dependencies>
      <!-- Intra-project -->
      <dependency>
        <groupId>io.fineo.etl.pipeline</groupId>
        <artifactId>stream-processing</artifactId>
        <version>${project.version}</version>
        <classifier>aws</classifier>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.fineo.etl.pipeline</groupId>
        <artifactId>stream-processing</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fineo.etl.pipeline</groupId>
        <artifactId>stream-processing</artifactId>
        <version>${project.version}</version>
        <classifier>tests</classifier>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.fineo.etl.pipeline</groupId>
        <artifactId>pipeline-utils</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fineo.etl.pipeline</groupId>
        <artifactId>pipeline-utils</artifactId>
        <version>${project.version}</version>
        <classifier>tests</classifier>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.fineo.schema</groupId>
        <artifactId>schema-mgmt</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fineo.etl</groupId>
        <artifactId>spark-common</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk</artifactId>
        <version>${aws-java-sdk.version}</version>
      </dependency>

      <!-- Spark/Scala -->
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.major.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_${scala.base.version}</artifactId>
        <version>${spark.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql_${scala.base.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-hive_${scala.base.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>chill-avro_${scala.base.version}</artifactId>
        <version>0.7.2</version>
      </dependency>
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>1.2<!-- match hadoop version --></version>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
        <groupId>io.fineo.schema</groupId>
        <artifactId>schema-mgmt</artifactId>
        <version>1.0-SNAPSHOT</version>
        <classifier>tests</classifier>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.fineo.etl</groupId>
        <artifactId>spark-common</artifactId>
        <version>${project.version}</version>
        <classifier>tests</classifier>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.fineo.aws</groupId>
        <artifactId>aws-common</artifactId>
        <version>1.0-SNAPSHOT</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>io.fineo.aws</groupId>
      <artifactId>aws-common</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <!-- Setup the different test phases -->
    <profile>
      <id>allTests</id>
      <activation>
        <property>
          <name>allTests</name>
        </property>
      </activation>
      <properties>
        <surefire.skip.simple>false</surefire.skip.simple>
        <surefire.skip.aws>false</surefire.skip.aws>
        <failsafe.skip.local>false</failsafe.skip.local>
        <failsafe.skip.aws>false</failsafe.skip.aws>
      </properties>
    </profile>
    <profile>
      <id>awsLocalTests</id>
      <activation>
        <property>
          <name>awsLocalTests</name>
        </property>
      </activation>
      <properties>
        <surefire.skip.simple>true</surefire.skip.simple>
        <surefire.skip.aws>false</surefire.skip.aws>
        <failsafe.skip.local>true</failsafe.skip.local>
        <failsafe.skip.aws>true</failsafe.skip.aws>
      </properties>
    </profile>
    <profile>
      <id>localTests</id>
      <activation>
        <property>
          <name>localTests</name>
        </property>
      </activation>
      <properties>
        <surefire.skip.simple>false</surefire.skip.simple>
        <surefire.skip.aws>true</surefire.skip.aws>
        <failsafe.skip.local>true</failsafe.skip.local>
        <failsafe.skip.aws>true</failsafe.skip.aws>
      </properties>
    </profile>
    <profile>
      <id>local-integration-tests</id>
      <activation>
        <property>
          <name>intTest</name>
        </property>
      </activation>
      <properties>
        <surefire.skip.simple>true</surefire.skip.simple>
        <surefire.skip.aws>true</surefire.skip.aws>
        <failsafe.skip.local>false</failsafe.skip.local>
        <failsafe.skip.aws>true</failsafe.skip.aws>
      </properties>
    </profile>
    <profile>
      <id>aws-integration-tests</id>
      <activation>
        <property>
          <name>awsIntegration</name>
        </property>
      </activation>
      <properties>
        <surefire.skip.simple>true</surefire.skip.simple>
        <surefire.skip.aws>true</surefire.skip.aws>
        <failsafe.skip.local>true</failsafe.skip.local>
        <failsafe.skip.aws>false</failsafe.skip.aws>
      </properties>
    </profile>
  </profiles>
</project>
