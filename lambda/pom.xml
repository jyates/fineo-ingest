<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.fineo.etl</groupId>
  <artifactId>lambda</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <!-- Build properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compile.version>1.8</maven.compile.version>

    <!-- Plugin Versions -->
    <maven.dependency.version>2.10</maven.dependency.version>
    <maven.compiler.version>3.3</maven.compiler.version>
    <avro.maven.plugin.version>1.7.7</avro.maven.plugin.version>
    <maven.shade.version>2.3</maven.shade.version>

    <!-- Dependency Versions -->
    <!-- AWS -->
    <aws-java-sdk.version>1.10.40</aws-java-sdk.version>
    <aws-lambda-java-core.version>1.1.0</aws-lambda-java-core.version>
    <amazon-kinesis-client.version>1.5.1</amazon-kinesis-client.version>
    <aws-lambda-java-log4j.version>1.0.0</aws-lambda-java-log4j.version>
    <amazon-kinesis-producer.version>0.10.2</amazon-kinesis-producer.version>
    <aws-dynamodb-local.version>1.10.5.1</aws-dynamodb-local.version>

    <!-- Other -->
    <fineo-schema-mgmt.version>1.0-SNAPSHOT</fineo-schema-mgmt.version>
    <jackson-jr.version>2.6.3</jackson-jr.version>

    <!-- Test dependencies -->
    <surefire.version>2.19</surefire.version>
    <junit.version>4.12</junit.version>
    <mockito.version>1.10.19</mockito.version>

    <!-- Test properties -->
    <test.output.to.file>true</test.output.to.file>
    <test.exclude.pattern></test.exclude.pattern>
    <surefire.awsLocalTests>io.fineo.aws.AwsDependentTests</surefire.awsLocalTests>
    <surefire.skipSimpleTests>false</surefire.skipSimpleTests>
    <surefire.skipAwsLocalTests>true</surefire.skipAwsLocalTests>
  </properties>

  <repositories>
    <!-- Official amazon dynamo local repository -->
    <repository>
      <id>dynamodb-local</id>
      <name>DynamoDB Local Release Repository</name>
      <url>http://dynamodb-local.s3-website-us-west-2.amazonaws.com/release</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk</artifactId>
      <version>${aws-java-sdk.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-lambda-java-core</artifactId>
      <version>${aws-lambda-java-core.version}</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-lambda-java-events</artifactId>
      <version>${aws-lambda-java-core.version}</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>amazon-kinesis-producer</artifactId>
      <version>${amazon-kinesis-producer.version}</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-lambda-java-log4j</artifactId>
      <version>${aws-lambda-java-log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-dynamodb</artifactId>
      <version>${aws-java-sdk.version}</version>
    </dependency>
    <!-- Handle logging warning for local logs -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.13</version>
    </dependency>
    <dependency>
      <groupId>io.fineo.schema</groupId>
      <artifactId>schema-mgmt</artifactId>
      <version>${fineo-schema-mgmt.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jr</groupId>
      <artifactId>jackson-jr-objects</artifactId>
      <version>${jackson-jr.version}</version>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${mockito.version}</version>
    </dependency>
    <dependency>
      <groupId>io.fineo.schema</groupId>
      <artifactId>schema-mgmt</artifactId>
      <version>${fineo-schema-mgmt.version}</version>
      <scope>test</scope>
      <classifier>tests</classifier>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>DynamoDBLocal</artifactId>
      <version>${aws-dynamodb-local.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.fineo.aws</groupId>
      <artifactId>aws-common</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- Build the output jar -->
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.version}</version>
          <configuration>
            <source>${maven.compile.version}</source>
            <target>${maven.compile.version}</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire.version}</version>
          <configuration>
            <redirectTestOutputToFile>${test.output.to.file}</redirectTestOutputToFile>
            <!-- Skip the standard test running, instead run the 'phases' below -->
            <skip>true</skip>
            <argLine>-enableassertions -Djava.security.egd=file:/dev/./urandom
              -Dsqlite4java.library.path=${project.build.directory}/dependencies
            </argLine>
            <excludes>
              <!-- users can add -D option to skip particular test classes
             ex: mvn test -Dtest.exclude.pattern=**/TestFoo.java,**/TestBar.java
              -->
              <exclude>${test.exclude.pattern}</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <id>local-tests</id>
              <goals>
                <goal>test</goal>
              </goals>
              <configuration>
                <excludedGroups>${surefire.awsLocalTests}</excludedGroups>
                <skip>${surefire.skipSimpleTests}</skip>
              </configuration>
            </execution>
            <execution>
              <id>awsLocalTests</id>
              <goals>
                <goal>test</goal>
              </goals>
              <configuration>
                <groups>${surefire.awsLocalTests}</groups>
                <skip>${surefire.skipAwsLocalTests}</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!-- Process the 'static' schema files in src/main/resources/avro -->
      <plugin>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-maven-plugin</artifactId>
        <version>${avro.maven.plugin.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>schema</goal>
              <goal>idl-protocol</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <sourceDirectory>src/main/resources/avro</sourceDirectory>
          <stringType>String</stringType>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven.dependency.version}</version>
        <executions>
          <execution>
            <!--<id>copy-dependencies</id>-->
            <phase>process-test-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>deploy</id>
      <activation>
        <property>
          <name>deploy</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>${maven.shade.version}</version>
            <configuration>
              <createDependencyReducedPom>false</createDependencyReducedPom>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <minimizeJar>true</minimizeJar>
                  <artifactSet>
                    <excludes>
                      <!-- logging jars -->
                      <exclude>log4j:log4j</exclude>
                      <exclude>org.slf4j:slf4j-log4j12</exclude>
                      <!-- Test jars -->
                      <exclude>junit:junit</exclude>
                      <exclude>com.amazonaws:DynamoDBLocal</exclude>
                      <exclude>io.fineo.aws:aws-common</exclude>
                      <exclude>io.fineo.schema:schema-mgmt:tests</exclude>
                      <exclude>org.mockito:mockito-all</exclude>
                    </excludes>
                  </artifactSet>
                  <filters>
                    <filter>
                      <artifact>*:*</artifact>
                      <excludes>
                        <exclude>META-INF/*.SF</exclude>
                        <exclude>META-INF/*.DSA</exclude>
                        <exclude>META-INF/*.RSA</exclude>
                        <exclude>.gitkeep</exclude>
                        <!-- Executable producer - huge!... not needed since we use the java api -->
                        <exclude>amazon-kinesis-producer-native-binaries/**</exclude>
                      </excludes>
                    </filter>
                  </filters>
                  <transformers>
                    <transformer
                       implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                      <resource>fineo-lambda.properties</resource>
                      <file>config/fineo-lambda.properties</file>
                    </transformer>
                    <transformer
                       implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                      <manifestEntries>
                        <X-Compile-Source-JDK>${maven.compile.version}</X-Compile-Source-JDK>
                        <X-Compile-Target-JDK>${maven.compile.version}</X-Compile-Target-JDK>
                      </manifestEntries>
                    </transformer>
                  </transformers>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Setup the different test phases -->
    <profile>
      <id>allTests</id>
      <activation>
        <property>
          <name>allTests</name>
        </property>
      </activation>
      <properties>
        <surefire.skipAwsLocalTests>false</surefire.skipAwsLocalTests>
        <surefire.skipSimpleTests>false</surefire.skipSimpleTests>
      </properties>
    </profile>
    <profile>
      <id>awsLocalTests</id>
      <activation>
        <property>
          <name>awsLocalTests</name>
        </property>
      </activation>
      <properties>
        <surefire.skipAwsLocalTests>false</surefire.skipAwsLocalTests>
        <surefire.skipSimpleTests>true</surefire.skipSimpleTests>
      </properties>
    </profile>
    <profile>
      <id>skipSimpleTests</id>
      <activation>
        <property>
          <name>skipSimpleTests</name>
        </property>
      </activation>
      <properties>
        <surefire.skipSimpleTests>true</surefire.skipSimpleTests>
      </properties>
    </profile>
  </profiles>
</project>